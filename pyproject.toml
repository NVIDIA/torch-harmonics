[build-system]
requires = [ "setuptools", "setuptools-scm", "torch"]
build-backend = "setuptools.build_meta"

[project]
name = "torch_harmonics"
authors = [
    { name="Boris Bonev" },
    { name="Thorsten Kurth" },
    { name="Max Rietmann" },
    { name="Mauro Bisson" },
    { name="Andrea Paris" },
    { name="Alberto Carpentieri" },
    { name="Massimiliano Fatica" },
    { name="Jean Kossaifi" },
    { name="Nikola Kovachki" },
    { name="Christian Hundt" },
]

maintainers = [
    { name="Boris Bonev", email = "bbonev@nvidia.com" },
    { name="Thorsten Kurth", email = "tkurth@nvidia.com" },
]

readme = "README.md"

dynamic = ["version"]

description = "Differentiable signal processing on the sphere for PyTorch."
requires-python = ">=3.9"

classifiers = [
    "Development Status :: 3 - Alpha",
    "Programming Language :: Python :: 3.9",
    "License :: OSI Approved :: BSD License",
    "Operating System :: OS Independent",
]

dependencies = [
    "torch>=2.4.0",
    "numpy>=1.22.4",
]


[tool.setuptools.dynamic]
version = {attr = "torch_harmonics.__version__"}

[tool.setuptools.packages.find]
    include = ["torch_harmonics*"]

[project.optional-dependencies]
dev = [
    "pytest>=6.0.0",
    "coverage>=6.5.0",
]
2d3ds = [
    "requests",
    "tarfile",
    "tqdm",
    "PIL",
    "h5py",
]

[tool.black]
line-length = 180

[tool.cibuildwheel]
# Build for Python 3.9, 3.10, 3.11, 3.12
build = ["cp39-*", "cp310-*", "cp311-*", "cp312-*"]

# Use manylinux for Linux wheels
manylinux-x86_64-image = "manylinux2014"
manylinux-i686-image = "manylinux2014"

# Build options

# Test the built wheel
test-command = "python -c 'import torch_harmonics; print(\"Import successful\")'"

# Repair wheels with auditwheel
repair-wheel-command = "auditwheel repair --exclude libc10.so --exclude libtorch.so --exclude libtorch_cpu.so --exclude libtorch_cuda.so --exclude libtorch_python.so --exclude libtorch_global_deps.so --exclude libtorch_cuda_cpp.so --exclude libtorch_cuda_cu.so --exclude libopenblas.so --exclude liblapack.so --exclude libgfortran.so --exclude libquadmath.so -w {dest_dir} {wheel}"

# Skip building for platforms we don't support
skip = ["*-win32", "*-win_amd64", "*-macosx_arm64"]